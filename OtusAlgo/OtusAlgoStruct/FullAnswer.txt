1 задание. Динамические массивы. +3 байта
2 задание. Таблица сравнение производительности. +3 байта

Время выполнения = примерно 8 часов
Язык C#

SingleArray
https://github.com/akolosov07/OtusAlgo/blob/main/OtusAlgo/OtusAlgoStruct/SingleArray.cs

VectorArray
https://github.com/akolosov07/OtusAlgo/blob/main/OtusAlgo/OtusAlgoStruct/VectorArray.cs

FactorArray
https://github.com/akolosov07/OtusAlgo/blob/main/OtusAlgo/OtusAlgoStruct/FactorArray.cs

MatrixArray 
https://github.com/akolosov07/OtusAlgo/blob/main/OtusAlgo/OtusAlgoStruct/MatrixArray.cs

+-------------------+-------------+-------------+-------------+-------------+-----------------+
|тип массива        |SingleArray  |VectorArray  |FactorArray  |MatrixArray  |ArrayListWrapper |
|                   |	          |             |             |             |		      |
+-------------------+-------------+-------------+-------------+-------------+-----------------+
|добавление         |0:20.580     |0:00.008     |0:00.003     |0:00.059     |0:00.003         |
|100_000 элементов  |             |             |             |             |		      |
+-------------------+-------------+-------------+-------------+-------------+-----------------+
|добавление         |             |             |             |             |		      |
|100_000 элементов  |0:50.366     |0:00.001     |0:00.009     |0:00.001     |0:00.006	      |
|по индексу         |             |             |             |		    |		      |
+-------------------+-------------+-------------+-------------+-------------+-----------------+
|получение          |             |             |             |		    |		      |
|100_000 элементов  |0:00.001     |0:00.000     |0:00.000     |0:00.001     |0:00.000	      |
|по индексу         |             |             |             |		    |		      |
+-------------------+-------------+-------------+-------------+-------------+-----------------+
|удаление           |             |             |             |		    |		      |
|100_000 элементов  |4:46.550     |4:47.430     |долго        |долго	    |0:00.001	      |
|по индексу         |             |             |             |		    |		      |
+-------------------+-------------+-------------+-------------+-------------+-----------------+

Выводы:
Самый быстрый в общем массив ArrayListWrapper.
VectorArray быстро добавляет, потому что
создается под капотом массив большой длины 
и заполняется без изменения массива.
Из кастомных массивов удаляется медленно,
потому что при удалении каждого элемента
перестраивается массив. Получение быстрое,
потому что только операция получения итема
из массива по индексу.
